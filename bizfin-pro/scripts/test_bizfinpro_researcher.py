#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã BizFin Pro Researcher
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(__file__)))

from modules.research.bizfinpro_researcher import BizFinProResearcher, run_research_pipeline
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_researcher_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–µ–∫—Ç–æ–º"""
    
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò BIZFIN PRO RESEARCHER")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    researcher = BizFinProResearcher()
    print("‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –¢–µ—Å—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
    test_keywords = [
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Ç–µ–Ω–¥–µ—Ä–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è", 
        "–≥–∞—Ä–∞–Ω—Ç–∏—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è"
    ]
    
    research_ids = []
    
    for keyword in test_keywords:
        print(f"\nüîç –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: {keyword}")
        try:
            research_data = run_research_pipeline(keyword, researcher)
            research_ids.append(research_data['research_id'])
            
            print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ (ID: {research_data['research_id']})")
            print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è: {research_data['execution_time']}—Å")
            print(f"   üìä SERP: {len(research_data['top5'])} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            print(f"   üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {len(research_data['pages'])} –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
    print(f"\nüìã –ò–¢–û–ì–û–í–´–ô –°–ü–ò–°–û–ö –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ô:")
    print("-" * 60)
    
    researches = researcher.list_researches(limit=10)
    for res in researches:
        print(f"ID: {res['id']:2d} | {res['keyword']:25s} | {res['created_at']:19s} | {res['execution_time_seconds']:2d}—Å")
    
    print(f"\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù! –°–æ–∑–¥–∞–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: {len(research_ids)}")
    
    return research_ids

def demonstrate_data_retrieval(research_ids):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î"""
    
    print(f"\nüìä –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    researcher = BizFinProResearcher()
    
    for research_id in research_ids[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
        print(f"\nüîç –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ID: {research_id}")
        
        research = researcher.get_research_by_id(research_id)
        if research:
            print(f"   –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {research['keyword']}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {research['research_name']}")
            print(f"   –°—Ç–∞—Ç—É—Å: {research['status']}")
            print(f"   SERP –¥–∞–Ω–Ω—ã—Ö: {len(research['serp_data'])} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            print(f"   –°—Ç—Ä–∞–Ω–∏—Ü –¥–∞–Ω–Ω—ã—Ö: {len(research['pages_data'])} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É SEO Blueprint
            if research['seo_blueprint']:
                bp = research['seo_blueprint']
                print(f"   SEO Title: {bp.get('title', 'N/A')[:50]}...")
                print(f"   SEO H1: {bp.get('h1', 'N/A')}")
                print(f"   SEO Slug: {bp.get('slug', 'N/A')}")
                print(f"   Outline –±–ª–æ–∫–æ–≤: {len(bp.get('outline', []))}")
                print(f"   FAQ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(bp.get('faq', []))}")
        else:
            print(f"   ‚ùå –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

if __name__ == "__main__":
    try:
        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        research_ids = test_researcher_integration()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        demonstrate_data_retrieval(research_ids)
        
        print(f"\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
