#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
batch_research_demo.py ‚Äî –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
–ü—Ä–∏–º–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ 50 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –≥–∞—Ä–∞–Ω—Ç–∏—è–º
"""

import sys
import os
import subprocess

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

def create_large_group():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π –≥—Ä—É–ø–ø—ã –∏–∑ 50 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
    
    keywords = [
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏", 
        "—Å—Ä–æ–∫ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –¥–ª—è –ú–°–ë",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ø–æ 44-–§–ó",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ø–æ 223-–§–ó",
        "—Ç–µ–Ω–¥–µ—Ä–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –∞–≤–∞–Ω—Å",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç –∞–≤–∞–Ω—Å–∞",
        "–Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–æ—Ç–∑—ã–≤–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–±–µ–∑–æ—Ç–∑—ã–≤–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –°–±–µ—Ä–±–∞–Ω–∫",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –í–¢–ë",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ü–°–ë",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –°–æ–≤–∫–æ–º–±–∞–Ω–∫",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω–±–∞–Ω–∫",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫",
        "–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ú–ö–ë",
        "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "—Ç–∞—Ä–∏—Ñ—ã –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "—É—Å–ª–æ–≤–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–¥–æ–∫—É–º–µ–Ω—Ç—ã –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "—Å–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏–π",
        "—Ä–µ–µ—Å—Ç—Ä –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –≥–∞—Ä–∞–Ω—Ç–∏–π",
        "–ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ–Ω–ª–∞–π–Ω",
        "–ø–æ–¥–¥–µ–ª—å–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Ä–∏—Å–∫–∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        "–ø–æ—Ä—É—á–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–∑–∞–ª–æ–≥ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–∫—Ä–µ–¥–∏—Ç –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–ª–∏–∑–∏–Ω–≥ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "–≤–∞–ª—é—Ç–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Ä—É–±–ª–µ–≤–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è"
    ]
    
    print("üöÄ –°–û–ó–î–ê–ù–ò–ï –ú–ê–°–°–û–í–û–ô –ì–†–£–ü–ü–´ –ó–ê–î–ê–ß")
    print("=" * 60)
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {len(keywords)}")
    print(f"üìù –¢–µ–º–∞—Ç–∏–∫–∞: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏")
    print(f"üéØ –¢–∏–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏: –ú–∞—Å—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑")
    print()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    cmd = [
        "python3", "scripts/enhanced_auto_research.py", 
        "--group", "–ú–∞—Å—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –ë–ì 50 –∫–ª—é—á–µ–π"
    ] + keywords
    
    print("üîß –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã:")
    print(" ".join(cmd))
    print()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
    try:
        result = subprocess.run(cmd, capture_output=True, text=True, cwd=".")
        
        if result.returncode == 0:
            print("‚úÖ –ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            print("üì§ –í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã:")
            print(result.stdout)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º group_id –∏–∑ –≤—ã–≤–æ–¥–∞
            lines = result.stdout.split('\n')
            group_id = None
            for line in lines:
                if "group_" in line and "—Å–æ–∑–¥–∞–Ω–∞" in line:
                    group_id = line.split(": ")[-1]
                    break
            
            if group_id:
                print(f"\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
                print(f"python3 scripts/enhanced_auto_research.py --process-group {group_id}")
                print()
                print("üìä –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:")
                print(f"python3 scripts/enhanced_auto_research.py --status {group_id}")
                
                return group_id
            else:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å group_id –∏–∑ –≤—ã–≤–æ–¥–∞")
                return None
                
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã:")
            print(result.stderr)
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return None

def show_usage():
    """–ü–æ–∫–∞–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("üîç –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ú–ê–°–°–û–í–û–ô –û–ë–†–ê–ë–û–¢–ö–ï")
    print("=" * 60)
    print()
    print("1Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ì–†–£–ü–ü–´ (50 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤):")
    print("   python3 scripts/batch_research_demo.py")
    print()
    print("2Ô∏è‚É£ –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò:")
    print("   python3 scripts/enhanced_auto_research.py --process-group GROUP_ID")
    print()
    print("3Ô∏è‚É£ –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–†–û–ì–†–ï–°–°–ê:")
    print("   python3 scripts/enhanced_auto_research.py --status GROUP_ID")
    print()
    print("4Ô∏è‚É£ –û–î–ò–ù–û–ß–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê:")
    print("   python3 scripts/enhanced_auto_research.py \"–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ\"")
    print()
    print("üìä –û–°–û–ë–ï–ù–ù–û–°–¢–ò –ú–ê–°–°–û–í–û–ô –û–ë–†–ê–ë–û–¢–ö–ò:")
    print("   ‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (3 –ø–æ—Ç–æ–∫–∞)")
    print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    print("   ‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–±–æ–µ–≤")
    print("   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1 and sys.argv[1] == "--help":
        show_usage()
        return 0
    
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ê–°–°–û–í–û–ô –û–ë–†–ê–ë–û–¢–ö–ò")
    print("=" * 60)
    print()
    
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1. –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –∏–∑ 50 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤\n2. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ")
    
    if choice == "1":
        group_id = create_large_group()
        if group_id:
            print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! Group ID: {group_id}")
            print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print(f"1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É: python3 scripts/enhanced_auto_research.py --process-group {group_id}")
            print(f"2. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å: python3 scripts/enhanced_auto_research.py --status {group_id}")
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É")
            return 1
    
    elif choice == "2":
        show_usage()
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())
