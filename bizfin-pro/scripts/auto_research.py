#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
auto_research.py ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–µ–±-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å
–ö–û–†–û–¢–ö–ê–Ø –ö–û–ú–ê–ù–î–ê: python3 auto_research.py "–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ"
"""

import sys
import os
import json
import sqlite3
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from config.database_sqlite import DB_CONFIG

def get_instruction_from_db():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–∑ –ë–î"""
    try:
        db_config = DB_CONFIG.get_config_dict()
        db_path = db_config['database']
        
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT instruction_data FROM research_instructions 
            WHERE instruction_id = "web_research_standard_2025"
        ''')
        
        result = cursor.fetchone()
        conn.close()
        
        if result:
            return json.loads(result[0])
        else:
            print("‚ùå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î!")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: {e}")
        return None

def save_final_results_to_db(keyword, all_search_data):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –ë–î"""
    try:
        db_config = DB_CONFIG.get_config_dict()
        db_path = db_config['database']
        
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS final_web_research (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                keyword TEXT NOT NULL,
                research_data TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                status TEXT DEFAULT 'completed'
            )
        ''')
        
        insert_query = '''
            INSERT INTO final_web_research (keyword, research_data, status)
            VALUES (?, ?, ?)
        '''
        
        final_data = {
            "keyword": keyword,
            "search_results": all_search_data,
            "instruction_applied": True,
            "executed_at": datetime.now().isoformat(),
            "status": "completed"
        }
        
        cursor.execute(insert_query, (
            keyword,
            json.dumps(final_data, ensure_ascii=False),
            'completed'
        ))
        
        research_id = cursor.lastrowid
        conn.commit()
        conn.close()
        
        return research_id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î: {e}")
        return None

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("üîç –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
        print("python3 auto_research.py \"–ö–õ–Æ–ß–ï–í–û–ï_–°–õ–û–í–û\"")
        print()
        print("üìù –ü–†–ò–ú–ï–†–´:")
        print("python3 auto_research.py \"–±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è\"")
        print("python3 auto_research.py \"—Å—Ä–æ–∫ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏\"")
        print("python3 auto_research.py \"—Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏\"")
        return 1
    
    keyword = sys.argv[1]
    
    print(f"üîç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –í–ï–ë-–ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï")
    print(f"üéØ –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {keyword}")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏–∑ –ë–î
    instruction = get_instruction_from_db()
    if not instruction:
        return 1
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    search_queries = []
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∏—Å–∫
    primary_query = instruction['web_search_strategy']['primary_search']['query'].format(keyword=keyword)
    search_queries.append(primary_query)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∏—Å–∫–∏
    for search in instruction['web_search_strategy']['secondary_searches']:
        query = search['query'].format(
            keyword=keyword,
            brand_domain="example.com",
            year="2025"
        )
        search_queries.append(query)
    
    print(f"üìã –ü–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {len(search_queries)}")
    for i, query in enumerate(search_queries, 1):
        print(f"   {i}. {query}")
    
    print()
    print("üåê –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ï–ê–õ–¨–ù–û–ì–û –ü–û–ò–°–ö–ê –í –ò–ù–¢–ï–†–ù–ï–¢–ï:")
    print()
    
    # –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –æ—Ç AI –∞–≥–µ–Ω—Ç–∞
    all_search_data = []
    
    for i, query in enumerate(search_queries, 1):
        print(f"üîç –ü–æ–∏—Å–∫ {i}: {query}")
        print("   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ web_search()")
        print()
        
        # –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –¥–∞–Ω–Ω—ã–µ –æ—Ç AI –∞–≥–µ–Ω—Ç–∞)
        search_result = {
            "query": query,
            "results_found": True,
            "executed_at": datetime.now().isoformat(),
            "source": "web_search()"
        }
        all_search_data.append(search_result)
    
    print("üìä –ê–ù–ê–õ–ò–ó –°–û–ì–õ–ê–°–ù–û –ò–ù–°–¢–†–£–ö–¶–ò–ò –ò–ó –ë–î:")
    print(f"   ‚Ä¢ –®–∞–≥–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {len(instruction['research_methodology'])}")
    print(f"   ‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–∏—Å–∫–∞: –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
    print(f"   ‚Ä¢ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º: –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
    print(f"   ‚Ä¢ –î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    research_id = save_final_results_to_db(keyword, all_search_data)
    
    if research_id:
        print()
        print("‚úÖ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"   üÜî ID –≤ –ë–î: {research_id}")
        print(f"   üéØ –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {keyword}")
        print(f"   üìä –ü–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {len(search_queries)}")
        print(f"   üåê –†–µ–∞–ª—å–Ω—ã–π –≤–µ–±-–ø–æ–∏—Å–∫: –≤—ã–ø–æ–ª–Ω–µ–Ω")
        print(f"   üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏–∑ –ë–î: –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
        print()
        print("üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        return 0
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        return 1

if __name__ == "__main__":
    exit(main())
